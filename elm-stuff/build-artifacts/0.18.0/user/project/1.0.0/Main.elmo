var _user$project$Main$update = F2(
	function (msg, model) {
		return model;
	});
var _user$project$Main$capitalize = function (str) {
	var _p0 = _elm_lang$core$String$uncons(str);
	if (_p0.ctor === 'Just') {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$String$toUpper(
				_elm_lang$core$String$fromChar(_p0._0._0)),
			_p0._0._1);
	} else {
		return '';
	}
};
var _user$project$Main$labelText = function (name) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_user$project$Main$capitalize(name),
		': ');
};
var _user$project$Main$toId = function (fieldName) {
	return A2(
		_elm_lang$core$String$join,
		'-',
		_elm_lang$core$String$words(
			_elm_lang$core$String$toLower(fieldName)));
};
var _user$project$Main$viewPasswordInput = function (fieldName) {
	var fieldId = _user$project$Main$toId(fieldName);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('form-group'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$label,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$for(fieldId),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_user$project$Main$labelText(fieldName)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('password'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('form-control'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$id(fieldId),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(''),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$viewTextInput = function (fieldName) {
	var fieldId = _user$project$Main$toId(fieldName);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('form-group'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$label,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$for(fieldId),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_user$project$Main$labelText(fieldName)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('text'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('form-control'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$id(fieldId),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(''),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$viewRecipeForm = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$h1,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('New Recipe'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$form,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id('recipe-form'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _user$project$Main$viewTextInput('name'),
					_1: {
						ctor: '::',
						_0: _user$project$Main$viewTextInput('prep time'),
						_1: {
							ctor: '::',
							_0: _user$project$Main$viewTextInput('cook time'),
							_1: {
								ctor: '::',
								_0: _user$project$Main$viewTextInput('servings yielded'),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$button,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('btn btn-default'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Submit'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$viewNewUserForm = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$h1,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Sign up'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$form,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id('new-user-form'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _user$project$Main$viewTextInput('name'),
					_1: {
						ctor: '::',
						_0: _user$project$Main$viewTextInput('email'),
						_1: {
							ctor: '::',
							_0: _user$project$Main$viewPasswordInput('password'),
							_1: {
								ctor: '::',
								_0: _user$project$Main$viewPasswordInput('password confirmation'),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$button,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('btn btn-default'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Submit'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Main$viewNewUserForm,
			_1: {
				ctor: '::',
				_0: _user$project$Main$viewRecipeForm,
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$initialModel = {};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$initialModel, view: _user$project$Main$view, update: _user$project$Main$update})();
var _user$project$Main$Model = {};
var _user$project$Main$Recipe = F4(
	function (a, b, c, d) {
		return {name: a, prepTime: b, cookTime: c, servingsYielded: d};
	});
var _user$project$Main$User = F2(
	function (a, b) {
		return {name: a, email: b};
	});
